syntax = "proto3";

package puncher;

service PuncherService {
	rpc AddListing (AddListingRequest) returns (AddListingResponse);
	rpc RemoveListing (RemoveListingRequest) returns (RemoveListingResponse);
	rpc GetListings (GetListingsRequest) returns (GetListingsResponse);
	
	rpc StreamSession (stream ClientStreamMessage) returns (stream ServerStreamMessage);

	rpc Join (JoinRequest) returns (JoinResponse);
}

// -- LISTINGS -- //

message ListingNoID {
	string name = 1;
}

message Listing {
	ListingNoID listing_no_id = 1;
	bytes id = 2;
}


// -------- MESSAGES -------- //

// -- AddListing --
message AddListingRequest {
	ListingNoID listing = 1;
	bytes session_id = 2;
}

message AddListingResponse {
	bytes listing_id = 1;
}


// -- RemoveListing --
message RemoveListingRequest {
	bytes session_id = 1;
}

message RemoveListingResponse {}


// -- GetListing --
message GetListingsRequest {}

message GetListingsResponse {
	repeated Listing listings = 1;
}

// -- StreamSession -- 

// Client
message ClientStreamMessage { // empty as keepalive
	oneof client_stream_enum {
		PunchStatus punch_status = 3;
	}
}

message PunchStatus {
	optional string message = 1;
	bool success = 2;
}

// Server
message ServerStreamMessage {
	optional bytes session_id_assignment = 3;
	oneof server_stream_enum {
		Punch punch = 1;
	}
}

message Punch {
	string ip = 1;
	uint32 port = 2;
}

// -- Join --
message JoinRequest {
	bytes session_id = 1;
	bytes target_listing_id = 2;
}

message JoinResponse {}


